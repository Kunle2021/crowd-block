/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Project, ProjectInterface } from "../Project";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minimum",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "details",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Contribute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "approveRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "contributersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "createRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "finishRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumRequest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSummary",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "numRequests",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minContribution",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contributersCount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "projectDetails",
            type: "string",
          },
          {
            internalType: "string",
            name: "projectName",
            type: "string",
          },
          {
            internalType: "address",
            name: "manager",
            type: "address",
          },
        ],
        internalType: "struct Project.Summary[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minContribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectDetails",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "projectSummary",
    outputs: [
      {
        internalType: "uint256",
        name: "numRequests",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minContribution",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "contributersCount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "projectDetails",
        type: "string",
      },
      {
        internalType: "string",
        name: "projectName",
        type: "string",
      },
      {
        internalType: "address",
        name: "manager",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "complete",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "approverCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260405162001c4a38038062001c4a833981810160405281019062000029919062000208565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600181905550826003908051906020019062000088929190620000ac565b508160049080519060200190620000a1929190620000ac565b5050505050620004ae565b828054620000ba906200038b565b90600052602060002090601f016020900481019282620000de57600085556200012a565b82601f10620000f957805160ff19168380011785556200012a565b828001600101855582156200012a579182015b82811115620001295782518255916020019190600101906200010c565b5b5090506200013991906200013d565b5090565b5b80821115620001585760008160009055506001016200013e565b5090565b6000620001736200016d84620002e1565b620002b8565b9050828152602081018484840111156200019257620001916200045a565b5b6200019f84828562000355565b509392505050565b600081519050620001b8816200047a565b92915050565b600082601f830112620001d657620001d562000455565b5b8151620001e88482602086016200015c565b91505092915050565b600081519050620002028162000494565b92915050565b6000806000806080858703121562000225576200022462000464565b5b60006200023587828801620001f1565b945050602085015167ffffffffffffffff8111156200025957620002586200045f565b5b6200026787828801620001be565b935050604085015167ffffffffffffffff8111156200028b576200028a6200045f565b5b6200029987828801620001be565b9250506060620002ac87828801620001a7565b91505092959194509250565b6000620002c4620002d7565b9050620002d28282620003c1565b919050565b6000604051905090565b600067ffffffffffffffff821115620002ff57620002fe62000426565b5b6200030a8262000469565b9050602081019050919050565b600062000324826200032b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156200037557808201518184015260208101905062000358565b8381111562000385576000848401525b50505050565b60006002820490506001821680620003a457607f821691505b60208210811415620003bb57620003ba620003f7565b5b50919050565b620003cc8262000469565b810181811067ffffffffffffffff82111715620003ee57620003ed62000426565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620004858162000317565b81146200049157600080fd5b50565b6200049f816200034b565b8114620004ab57600080fd5b50565b61178c80620004be6000396000f3fe6080604052600436106100dd5760003560e01c8063aaffadf31161007f578063cc58b5ef11610059578063cc58b5ef14610276578063d7d1bbdb14610292578063e9f146a3146102ae578063f8929863146102d9576100dd565b8063aaffadf314610216578063b2b4752714610241578063b309a91a1461026c576100dd565b8063481c6a75116100bb578063481c6a751461016357806381d12c581461018e5780638a9cfd55146101cf5780639a33e300146101eb576100dd565b806312065fe0146100e25780632accd1441461010d5780634051ddac14610138575b600080fd5b3480156100ee57600080fd5b506100f761031b565b604051610104919061139a565b60405180910390f35b34801561011957600080fd5b50610122610328565b60405161012f919061131e565b60405180910390f35b34801561014457600080fd5b5061014d6103b6565b60405161015a91906112fc565b60405180910390f35b34801561016f57600080fd5b506101786107f6565b60405161018591906112e1565b60405180910390f35b34801561019a57600080fd5b506101b560048036038101906101b091906110de565b61081a565b6040516101c6959493929190611340565b60405180910390f35b6101e960048036038101906101e4919061106f565b610905565b005b3480156101f757600080fd5b50610200610a1c565b60405161020d919061131e565b60405180910390f35b34801561022257600080fd5b5061022b610aaa565b604051610238919061139a565b60405180910390f35b34801561024d57600080fd5b50610256610ab0565b604051610263919061139a565b60405180910390f35b610274610aba565b005b610290600480360381019061028b91906110de565b610b3a565b005b6102ac60048036038101906102a791906110de565b610c72565b005b3480156102ba57600080fd5b506102c3610db0565b6040516102d0919061139a565b60405180910390f35b3480156102e557600080fd5b5061030060048036038101906102fb91906110de565b610db6565b604051610312969594939291906113b5565b60405180910390f35b6000804790508091505090565b600380546103359061159b565b80601f01602080910402602001604051908101604052809291908181526020018280546103619061159b565b80156103ae5780601f10610383576101008083540402835291602001916103ae565b820191906000526020600020905b81548152906001019060200180831161039157829003601f168201915b505050505081565b606060056040518060c00160405280600154815260200160025481526020016006548152602001600380546103ea9061159b565b80601f01602080910402602001604051908101604052809291908181526020018280546104169061159b565b80156104635780601f1061043857610100808354040283529160200191610463565b820191906000526020600020905b81548152906001019060200180831161044657829003601f168201915b505050505081526020016004805461047a9061159b565b80601f01602080910402602001604051908101604052809291908181526020018280546104a69061159b565b80156104f35780601f106104c8576101008083540402835291602001916104f3565b820191906000526020600020905b8154815290600101906020018083116104d657829003601f168201915b5050505050815260200160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301908051906020019061059a929190610f32565b5060808201518160040190805190602001906105b7929190610f32565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506005805480602002602001604051908101604052809291908181526020016000905b828210156107ed57838290600052602060002090600602016040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820180546106749061159b565b80601f01602080910402602001604051908101604052809291908181526020018280546106a09061159b565b80156106ed5780601f106106c2576101008083540402835291602001916106ed565b820191906000526020600020905b8154815290600101906020018083116106d057829003601f168201915b505050505081526020016004820180546107069061159b565b80601f01602080910402602001604051908101604052809291908181526020018280546107329061159b565b801561077f5780601f106107545761010080835404028352916020019161077f565b820191906000526020600020905b81548152906001019060200180831161076257829003601f168201915b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610623565b50505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760205280600052604060002060009150905080600001805461083d9061159b565b80601f01602080910402602001604051908101604052809291908181526020018280546108699061159b565b80156108b65780601f1061088b576101008083540402835291602001916108b6565b820191906000526020600020905b81548152906001019060200180831161089957829003601f168201915b5050505050908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16908060030154905085565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461095d57600080fd5b60006007600060066000815480929190610976906115fe565b9190505581526020019081526020016000209050838160000190805190602001906109a2929190610f32565b50828160010181905550818160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160020160146101000a81548160ff0219169083151502179055506000816003018190555050505050565b60048054610a299061159b565b80601f0160208091040260200160405190810160405280929190818152602001828054610a559061159b565b8015610aa25780601f10610a7757610100808354040283529160200191610aa2565b820191906000526020600020905b815481529060010190602001808311610a8557829003601f168201915b505050505081565b60015481565b6000600654905090565b6001543411610ac857600080fd5b6001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060026000815480929190610b33906115fe565b9190505550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b9257600080fd5b60006007600083815260200190815260200160002090508060020160149054906101000a900460ff1615610bc557600080fd5b60028054610bd391906114e0565b816003015411610be257600080fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600101549081150290604051600060405180830381858888f19350505050158015610c50573d6000803e3d6000fd5b5060018160020160146101000a81548160ff0219169083151502179055505050565b6000600760008381526020019081526020016000209050600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610cdf57600080fd5b8060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610d3857600080fd5b60018160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550806003016000815480929190610da7906115fe565b91905055505050565b60025481565b60058181548110610dc657600080fd5b9060005260206000209060060201600091509050806000015490806001015490806002015490806003018054610dfb9061159b565b80601f0160208091040260200160405190810160405280929190818152602001828054610e279061159b565b8015610e745780601f10610e4957610100808354040283529160200191610e74565b820191906000526020600020905b815481529060010190602001808311610e5757829003601f168201915b505050505090806004018054610e899061159b565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb59061159b565b8015610f025780601f10610ed757610100808354040283529160200191610f02565b820191906000526020600020905b815481529060010190602001808311610ee557829003601f168201915b5050505050908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b828054610f3e9061159b565b90600052602060002090601f016020900481019282610f605760008555610fa7565b82601f10610f7957805160ff1916838001178555610fa7565b82800160010185558215610fa7579182015b82811115610fa6578251825591602001919060010190610f8b565b5b509050610fb49190610fb8565b5090565b5b80821115610fd1576000816000905550600101610fb9565b5090565b6000610fe8610fe384611449565b611424565b90508281526020810184848401111561100457611003611708565b5b61100f848285611559565b509392505050565b60008135905061102681611728565b92915050565b600082601f83011261104157611040611703565b5b8135611051848260208601610fd5565b91505092915050565b6000813590506110698161173f565b92915050565b60008060006060848603121561108857611087611712565b5b600084013567ffffffffffffffff8111156110a6576110a561170d565b5b6110b28682870161102c565b93505060206110c38682870161105a565b92505060406110d486828701611017565b9150509250925092565b6000602082840312156110f4576110f3611712565b5b60006111028482850161105a565b91505092915050565b60006111178383611233565b905092915050565b61112881611511565b82525050565b61113781611511565b82525050565b60006111488261148a565b61115281856114ad565b9350836020820285016111648561147a565b8060005b858110156111a05784840389528151611181858261110b565b945061118c836114a0565b925060208a01995050600181019050611168565b50829750879550505050505092915050565b6111bb81611523565b82525050565b60006111cc82611495565b6111d681856114be565b93506111e6818560208601611568565b6111ef81611717565b840191505092915050565b600061120582611495565b61120f81856114cf565b935061121f818560208601611568565b61122881611717565b840191505092915050565b600060c08301600083015161124b60008601826112c3565b50602083015161125e60208601826112c3565b50604083015161127160408601826112c3565b506060830151848203606086015261128982826111c1565b915050608083015184820360808601526112a382826111c1565b91505060a08301516112b860a086018261111f565b508091505092915050565b6112cc8161154f565b82525050565b6112db8161154f565b82525050565b60006020820190506112f6600083018461112e565b92915050565b60006020820190508181036000830152611316818461113d565b905092915050565b6000602082019050818103600083015261133881846111fa565b905092915050565b600060a082019050818103600083015261135a81886111fa565b905061136960208301876112d2565b611376604083018661112e565b61138360608301856111b2565b61139060808301846112d2565b9695505050505050565b60006020820190506113af60008301846112d2565b92915050565b600060c0820190506113ca60008301896112d2565b6113d760208301886112d2565b6113e460408301876112d2565b81810360608301526113f681866111fa565b9050818103608083015261140a81856111fa565b905061141960a083018461112e565b979650505050505050565b600061142e61143f565b905061143a82826115cd565b919050565b6000604051905090565b600067ffffffffffffffff821115611464576114636116d4565b5b61146d82611717565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006114eb8261154f565b91506114f68361154f565b92508261150657611505611676565b5b828204905092915050565b600061151c8261152f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561158657808201518184015260208101905061156b565b83811115611595576000848401525b50505050565b600060028204905060018216806115b357607f821691505b602082108114156115c7576115c66116a5565b5b50919050565b6115d682611717565b810181811067ffffffffffffffff821117156115f5576115f46116d4565b5b80604052505050565b60006116098261154f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561163c5761163b611647565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61173181611511565b811461173c57600080fd5b50565b6117488161154f565b811461175357600080fd5b5056fea264697066735822122056ab946e432f1c054b64080d40084112433900679c4f5356f5ceb38afe140ca464736f6c63430008060033";

type ProjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Project__factory extends ContractFactory {
  constructor(...args: ProjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    minimum: PromiseOrValue<BigNumberish>,
    details: PromiseOrValue<string>,
    name: PromiseOrValue<string>,
    creator: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Project> {
    return super.deploy(
      minimum,
      details,
      name,
      creator,
      overrides || {}
    ) as Promise<Project>;
  }
  override getDeployTransaction(
    minimum: PromiseOrValue<BigNumberish>,
    details: PromiseOrValue<string>,
    name: PromiseOrValue<string>,
    creator: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      minimum,
      details,
      name,
      creator,
      overrides || {}
    );
  }
  override attach(address: string): Project {
    return super.attach(address) as Project;
  }
  override connect(signer: Signer): Project__factory {
    return super.connect(signer) as Project__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProjectInterface {
    return new utils.Interface(_abi) as ProjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Project {
    return new Contract(address, _abi, signerOrProvider) as Project;
  }
}
